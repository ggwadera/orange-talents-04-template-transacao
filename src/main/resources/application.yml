spring:
  application:
    name: transacoes
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5433/transacoes}
    username: ${DB_USER:root}
    password: ${DB_PW:password}
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/transacoes}
          jwk-set-uri: ${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/transacoes/protocol/openid-connect/certs}
  kafka:
    bootstrap-servers: ${KAFKA_HOST:localhost:9092}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID:${spring.application.name}}
      auto-offset-reset: ${KAFKA_AUTO-OFFSET-RESET:latest}
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        "[spring.json.trusted.packages]": "*"

management:
  endpoints:
    web:
      exposure:
        include: info, health, prometheus

opentracing:
  jaeger:
    enabled: ${JAEGER_ENABLED:true}
    service-name: ${spring.application.name}
    http-sender:
      url: ${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
    probabilistic-sampler:
      sampling-rate: ${JAEGER_SAMPLER:1}

kafka:
  topics:
    transactions: ${KAFKA_TOPICS_TRANSACTIONS:transacoes}